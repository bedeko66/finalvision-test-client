{"ast":null,"code":"var _jsxFileName = \"/Users/bedeko/dev/finervision_dev_test/client/src/Step2.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useHistory } from 'react-router-dom';\nimport { useData } from \"./DataContext\";\nimport Joi from \"joi-browser\";\nimport { toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Step2 = () => {\n  _s();\n\n  const history = useHistory();\n  const {\n    setValues,\n    data\n  } = useData();\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm({\n    defaultValues: {\n      phone: data.phone,\n      gender: data.gender,\n      birth: data.birth\n    },\n    mode: \"onBlur\"\n  });\n  const schema = {\n    phone: Joi.number().min(10).max(10).required().label(\"Phone\"),\n    gender: Joi.string().alphanum().optional().label(\"Gender\"),\n    birth: Joi.date().min(1900).max(2021).label(\"Birth date\")\n  };\n\n  const validate = usrData => {\n    const options = {\n      abortEarly: false\n    }; // let ifNo = {\n    //     isNumber:function(str) {\n    //         var pattern = /[^a-zA-Z]/g;\n    //         return pattern.test(str);\n    //     }\n    // }\n    // if (ifNo.isNumber(usrData.firstName)){\n    //     toast.error('Only text allowed')\n    //     return \n    // }\n\n    const result = Joi.validate(usrData, schema, options);\n    if (!result.error) return null;\n    let v_errors = {};\n\n    for (let item of result.error.details) {\n      v_errors[item.path[0]] = item.message;\n    }\n\n    return v_errors;\n  };\n\n  const onSubmit = data => {\n    let usrData = data;\n    let errors = validate(usrData);\n\n    if (errors) {\n      Object.values(errors).forEach(err => {\n        toast.error(err);\n        return;\n      });\n    } else {\n      setValues(data);\n      history.push(\"/step3\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Step 2: More comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", { ...register('phone'),\n        name: \"phone\",\n        type: \"text\",\n        placeholder: \"Phone\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register('gender'),\n        name: \"gender\",\n        type: \"text\",\n        placeholder: \"Gender\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register('birth'),\n        name: \"birth\",\n        type: \"email\",\n        placeholder: \"birth\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Step2, \"1bvUjjG26Fks+l+PP9Rs9G9/ue4=\", false, function () {\n  return [useHistory, useData, useForm];\n});\n\n_c = Step2;\n\nvar _c;\n\n$RefreshReg$(_c, \"Step2\");","map":{"version":3,"sources":["/Users/bedeko/dev/finervision_dev_test/client/src/Step2.js"],"names":["React","useState","useForm","useHistory","useData","Joi","toast","Step2","history","setValues","data","register","handleSubmit","errors","defaultValues","phone","gender","birth","mode","schema","number","min","max","required","label","string","alphanum","optional","date","validate","usrData","options","abortEarly","result","error","v_errors","item","details","path","message","onSubmit","Object","values","forEach","err","push"],"mappings":"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","sourcesContent":["import React,  { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useHistory } from 'react-router-dom';\nimport { useData } from \"./DataContext\";\n\nimport Joi from \"joi-browser\";\nimport { toast } from 'react-toastify';\n\nexport const Step2 = () => {\n\nconst history = useHistory();\n\nconst { setValues, data } = useData();\n\nconst { register, handleSubmit, errors } = useForm({\n    defaultValues: { \n        phone: data.phone,\n        gender: data.gender,\n        birth: data.birth\n     },\n    mode: \"onBlur\",\n});\n\nconst schema = {\n    phone: Joi.number().min(10).max(10).required().label(\"Phone\"),\n    gender: Joi.string().alphanum().optional().label(\"Gender\"),\n    birth: Joi.date().min(1900).max(2021).label(\"Birth date\"),\n}\nconst validate = (usrData) => {\n    const options = { abortEarly: false };\n    // let ifNo = {\n    //     isNumber:function(str) {\n    //         var pattern = /[^a-zA-Z]/g;\n    //         return pattern.test(str);\n    //     }\n    // }\n    // if (ifNo.isNumber(usrData.firstName)){\n    //     toast.error('Only text allowed')\n    //     return \n    // }\n   \n    const result = Joi.validate(usrData, schema, options);\n    if (!result.error) return null;\n    \n    let v_errors = {};\n    for (let item of result.error.details) {\n        v_errors[item.path[0]] = item.message;\n    }\n    return v_errors;\n}\n\nconst onSubmit = (data) => {\n    let usrData = data\n    let errors = validate(usrData);\n    if (errors) {\n        Object.values(errors).forEach(err => {\n            toast.error(err)\n            return\n        })\n    } else {  \n        setValues(data)\n        history.push(\"/step3\")\n    }\n}\n\n    return (\n        <div>\n            <h2>Step 2: More comments</h2>\n        <form onSubmit={handleSubmit(onSubmit)}>\n            <input {...register('phone')} name=\"phone\" type=\"text\" placeholder=\"Phone\" />\n            <input {...register('gender')} name=\"gender\" type=\"text\" placeholder=\"Gender\" />\n            <input {...register('birth')} name=\"birth\" type=\"email\" placeholder=\"birth\" />\n            <button type=\"submit\">Next</button>\n        </form>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}