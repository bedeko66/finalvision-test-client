{"ast":null,"code":"var _jsxFileName = \"/Users/bedeko/dev/finervision_dev_test/client/src/Step1.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useHistory } from 'react-router-dom';\nimport { useData } from \"./DataContext\";\nimport Joi from \"joi-browser\";\nimport { toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Step1 = () => {\n  _s();\n\n  const {\n    setValues,\n    data\n  } = useData();\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm({\n    defaultValues: {\n      firstName: data.firstName,\n      surname: data.surname,\n      email: data.email\n    },\n    mode: \"onBlur\"\n  });\n  const history = useHistory();\n  const schema = {\n    firstName: Joi.string().alphanum().min(1).max(50).required().label(\"First Name\"),\n    surname: Joi.string().alphanum().min(2).max(50).required().label(\"Surname\"),\n    email: Joi.string().email().required().label(\"Email\")\n  };\n\n  const validate = usrData => {\n    const options = {\n      abortEarly: false\n    };\n    let ifNo = {\n      isNumber: function (str) {\n        var pattern = /[^a-zA-Z]/g;\n        return pattern.test(str);\n      }\n    };\n\n    if (ifNo.isNumber(usrData.firstName)) {\n      toast.error('Only text allowed');\n      return;\n    }\n\n    const result = Joi.validate(usrData, schema, options);\n    if (!result.error) return null;\n    let v_errors = {};\n\n    for (let item of result.error.details) {\n      v_errors[item.path[0]] = item.message;\n    }\n\n    return v_errors;\n  };\n\n  const onSubmit = data => {\n    let usrData = data;\n    let errors = validate(usrData);\n\n    if (errors) {\n      Object.values(errors).forEach(err => {\n        toast.error(err);\n        return;\n      });\n    } else {\n      setValues(data);\n      history.push(\"/step2\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"conainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Step 1: Your details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"firstName\",\n        children: \"First Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"firstName\",\n        name: \"firstName\",\n        type: \"text\",\n        ...register('firstName')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"surname\",\n        children: \"Surname\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register('surname'),\n        id: \"surname\",\n        name: \"surname\",\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"email\",\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register('email'),\n        id: \"email\",\n        name: \"email\",\n        type: \"email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Step 2: More comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Step 3: Final comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Step1, \"QRUpmtfid4w6RIceXgoXclYwj2c=\", false, function () {\n  return [useData, useForm, useHistory];\n});\n\n_c = Step1;\n\nvar _c;\n\n$RefreshReg$(_c, \"Step1\");","map":{"version":3,"sources":["/Users/bedeko/dev/finervision_dev_test/client/src/Step1.js"],"names":["React","useState","useForm","useHistory","useData","Joi","toast","Step1","setValues","data","register","handleSubmit","errors","defaultValues","firstName","surname","email","mode","history","schema","string","alphanum","min","max","required","label","validate","usrData","options","abortEarly","ifNo","isNumber","str","pattern","test","error","result","v_errors","item","details","path","message","onSubmit","Object","values","forEach","err","push"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useHistory } from 'react-router-dom';\nimport { useData } from \"./DataContext\";\nimport Joi from \"joi-browser\";\nimport { toast } from 'react-toastify';\n\n\nexport const Step1 = () => {\n\n    const { setValues, data } = useData();\n\n    const { register, handleSubmit, errors } = useForm({\n        defaultValues: { firstName: data.firstName, surname: data.surname, email: data.email },\n        mode: \"onBlur\",\n    });\n    const history = useHistory();\n\n    const schema = {\n        firstName: Joi.string().alphanum().min(1).max(50).required().label(\"First Name\"),\n        surname: Joi.string().alphanum().min(2).max(50).required().label(\"Surname\"),\n        email: Joi.string().email().required().label(\"Email\"),\n    }\n\n    const validate = (usrData) => {\n        const options = { abortEarly: false };\n        let ifNo = {\n            isNumber:function(str) {\n                var pattern = /[^a-zA-Z]/g;\n                return pattern.test(str);\n            }\n        }\n        if (ifNo.isNumber(usrData.firstName)){\n            toast.error('Only text allowed')\n            return \n        }\n       \n        const result = Joi.validate(usrData, schema, options);\n        if (!result.error) return null;\n        \n        let v_errors = {};\n        for (let item of result.error.details) {\n            v_errors[item.path[0]] = item.message;\n        }\n        return v_errors;\n    }\n\n    const onSubmit = (data) => {\n        let usrData = data\n\n        \n        let errors = validate(usrData);\n        if (errors) {\n            Object.values(errors).forEach(err => {\n                toast.error(err)\n                return\n            })\n        } else {  \n            setValues(data)\n            history.push(\"/step2\")\n        }\n    }\n\n    return (\n        <div className=\"conainer\">\n            <h4>Step 1: Your details</h4>\n            <form onSubmit={handleSubmit(onSubmit)}>\n                <label for=\"firstName\">First Name</label>\n                <input \n                    id=\"firstName\"\n                    name=\"firstName\"\n                    type=\"text\"\n                    {...register('firstName')} \n                    />\n                <label for=\"surname\">Surname</label>\n                <input \n                    {...register('surname')}\n                    id=\"surname\"\n                    name=\"surname\" \n                    type=\"text\" \n                />\n                <label for=\"email\">Email</label>\n                <input \n                    {...register('email')}\n                    id=\"email\"\n                    name=\"email\" \n                    type=\"email\" \n                />\n                <button type=\"submit\">Next</button>\n            </form>\n            <h4>Step 2: More comments</h4>\n            <h4>Step 3: Final comments</h4>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}