{"ast":null,"code":"var _jsxFileName = \"/Users/bedeko/dev/finervision_dev_test/client/src/Step1.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useHistory } from 'react-router-dom';\nimport Joi from \"joi-browser\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Step1 = () => {\n  _s();\n\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm();\n  const history = useHistory();\n  const schema = {\n    firstname: Joi.string().min(1).required(),\n    surname: Joi.string().min(2).required(),\n    email: Joi.string().email().required()\n  };\n\n  const validate = data => {\n    const result = Joi.validate(data, schema, {\n      abortEarly: false\n    });\n    if (!result.error) return null;\n    const errors = {};\n\n    for (let item of result.error.details) errors[item.path[0]] = item.message;\n\n    return errors;\n  };\n\n  const onSubmit = data => {\n    validate(data); // history.push(\"/step2\")\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Step 1: Your details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", { ...register('firstName', {\n          required: true\n        }),\n        name: \"firstName\",\n        type: \"text\",\n        placeholder: \"First Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register('surname', {\n          required: true\n        }),\n        name: \"surname\",\n        type: \"text\",\n        placeholder: \"Surname\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register('email', {\n          required: true\n        }),\n        name: \"email\",\n        type: \"email\",\n        placeholder: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: onSubmit,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Step1, \"OxBzvLvyqkluHWa37TdHftQcVy0=\", false, function () {\n  return [useForm, useHistory];\n});\n\n_c = Step1;\n\nvar _c;\n\n$RefreshReg$(_c, \"Step1\");","map":{"version":3,"sources":["/Users/bedeko/dev/finervision_dev_test/client/src/Step1.js"],"names":["React","useForm","useHistory","Joi","Step1","register","handleSubmit","errors","history","schema","firstname","string","min","required","surname","email","validate","data","result","abortEarly","error","item","details","path","message","onSubmit"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,GAAP,MAAgB,aAAhB;;AAGA,OAAO,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAE3B,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,YAAZ;AAA0BC,IAAAA;AAA1B,MAAqCN,OAAO,EAAlD;AACA,QAAMO,OAAO,GAAGN,UAAU,EAA1B;AAEA,QAAMO,MAAM,GAAG;AACXC,IAAAA,SAAS,EAAEP,GAAG,CAACQ,MAAJ,GAAaC,GAAb,CAAiB,CAAjB,EAAoBC,QAApB,EADA;AAEXC,IAAAA,OAAO,EAAEX,GAAG,CAACQ,MAAJ,GAAaC,GAAb,CAAiB,CAAjB,EAAoBC,QAApB,EAFE;AAGXE,IAAAA,KAAK,EAAEZ,GAAG,CAACQ,MAAJ,GAAaI,KAAb,GAAqBF,QAArB;AAHI,GAAf;;AAMA,QAAMG,QAAQ,GAAGC,IAAI,IAAI;AACrB,UAAMC,MAAM,GAAGf,GAAG,CAACa,QAAJ,CAAaC,IAAb,EAAmBR,MAAnB,EAA2B;AACtCU,MAAAA,UAAU,EAAE;AAD0B,KAA3B,CAAf;AAGA,QAAI,CAACD,MAAM,CAACE,KAAZ,EAAmB,OAAO,IAAP;AAEnB,UAAMb,MAAM,GAAG,EAAf;;AACA,SAAK,IAAIc,IAAT,IAAiBH,MAAM,CAACE,KAAP,CAAaE,OAA9B,EACIf,MAAM,CAACc,IAAI,CAACE,IAAL,CAAU,CAAV,CAAD,CAAN,GAAuBF,IAAI,CAACG,OAA5B;;AACJ,WAAOjB,MAAP;AACH,GAVD;;AAYA,QAAMkB,QAAQ,GAAIR,IAAD,IAAU;AACvBD,IAAAA,QAAQ,CAACC,IAAD,CAAR,CADuB,CAEvB;AACH,GAHD;;AAKI,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEA;AAAA,8BACI,sBAAWZ,QAAQ,CAAC,WAAD,EAAc;AAAEQ,UAAAA,QAAQ,EAAE;AAAZ,SAAd,CAAnB;AAAsD,QAAA,IAAI,EAAC,WAA3D;AAAuE,QAAA,IAAI,EAAC,MAA5E;AAAmF,QAAA,WAAW,EAAC;AAA/F;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,sBAAWR,QAAQ,CAAC,SAAD,EAAY;AAAEQ,UAAAA,QAAQ,EAAE;AAAZ,SAAZ,CAAnB;AAAoD,QAAA,IAAI,EAAC,SAAzD;AAAmE,QAAA,IAAI,EAAC,MAAxE;AAA+E,QAAA,WAAW,EAAC;AAA3F;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI,sBAAWR,QAAQ,CAAC,OAAD,EAAU;AAAEQ,UAAAA,QAAQ,EAAE;AAAZ,SAAV,CAAnB;AAAkD,QAAA,IAAI,EAAC,OAAvD;AAA+D,QAAA,IAAI,EAAC,OAApE;AAA4E,QAAA,WAAW,EAAC;AAAxF;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAEY,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH,CAvCM;;GAAMrB,K;UAE8BH,O,EAC3BC,U;;;KAHHE,K","sourcesContent":["import React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useHistory } from 'react-router-dom';\nimport Joi from \"joi-browser\";\n\n\nexport const Step1 = () => {\n\nconst { register, handleSubmit, errors } = useForm()\nconst history = useHistory();\n\nconst schema = {\n    firstname: Joi.string().min(1).required(),\n    surname: Joi.string().min(2).required(),\n    email: Joi.string().email().required(),\n}\n\nconst validate = data => {\n    const result = Joi.validate(data, schema, {\n        abortEarly: false\n    });\n    if (!result.error) return null;\n    \n    const errors = {};\n    for (let item of result.error.details)\n        errors[item.path[0]] = item.message;\n    return errors;\n}\n\nconst onSubmit = (data) => {\n    validate(data)\n    // history.push(\"/step2\")\n}\n\n    return (\n        <div>\n            <h2>Step 1: Your details</h2>\n        <form>\n            <input {...register('firstName', { required: true })} name=\"firstName\" type=\"text\" placeholder=\"First Name\" />\n            <input {...register('surname', { required: true })} name=\"surname\" type=\"text\" placeholder=\"Surname\" />\n            <input {...register('email', { required: true })} name=\"email\" type=\"email\" placeholder=\"Email\" />\n            <button type=\"button\" onClick={onSubmit}>Next</button>\n        </form>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}