{"ast":null,"code":"var _jsxFileName = \"/Users/bedeko/dev/finervision_dev_test/client/src/Step2.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useHistory } from 'react-router-dom';\nimport { useData } from \"./DataContext\";\nimport Joi from \"joi-browser\";\nimport { toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Step2 = () => {\n  _s();\n\n  const history = useHistory();\n  const {\n    setValues,\n    data\n  } = useData();\n  const [rawData, setRawData] = useState(\"\");\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm({\n    defaultValues: {\n      phone: data.phone,\n      gender: data.gender,\n      birth: data.birth\n    },\n    mode: \"onBlur\"\n  });\n  const schema = {\n    phone: Joi.string().alphanum().min(1).max(50).required().label(\"First Name\"),\n    gender: Joi.string().alphanum().min(2).max(50).optional().label(\"Gender\"),\n    birth: Joi.date().required().optional().label(\"Birth date\")\n  };\n\n  const onSubmit = data => {\n    history.push(\"/step3\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Step 2: More comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", { ...register('phone', {\n          required: true\n        }),\n        name: \"phone\",\n        type: \"text\",\n        placeholder: \"Phone\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register('gender', {\n          required: true\n        }),\n        name: \"gender\",\n        type: \"text\",\n        placeholder: \"Gender\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register('birth', {\n          required: true\n        }),\n        name: \"birth\",\n        type: \"email\",\n        placeholder: \"birth\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Step2, \"irZG8CPtsr97yM94jPi+2i7CArk=\", false, function () {\n  return [useHistory, useData, useForm];\n});\n\n_c = Step2;\n\nvar _c;\n\n$RefreshReg$(_c, \"Step2\");","map":{"version":3,"sources":["/Users/bedeko/dev/finervision_dev_test/client/src/Step2.js"],"names":["React","useState","useForm","useHistory","useData","Joi","toast","Step2","history","setValues","data","rawData","setRawData","register","handleSubmit","errors","defaultValues","phone","gender","birth","mode","schema","string","alphanum","min","max","required","label","optional","date","onSubmit","push"],"mappings":";;;AAAA,OAAOA,KAAP,IAAiBC,QAAjB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,OAAT,QAAwB,eAAxB;AAEA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,KAAT,QAAsB,gBAAtB;;AAEA,OAAO,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAE3B,QAAMC,OAAO,GAAGL,UAAU,EAA1B;AAEA,QAAM;AAAEM,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAAsBN,OAAO,EAAnC;AACA,QAAM,CAAEO,OAAF,EAAWC,UAAX,IAA0BX,QAAQ,CAAC,EAAD,CAAxC;AAEA,QAAM;AAAEY,IAAAA,QAAF;AAAYC,IAAAA,YAAZ;AAA0BC,IAAAA;AAA1B,MAAqCb,OAAO,CAAC;AAC/Cc,IAAAA,aAAa,EAAE;AACXC,MAAAA,KAAK,EAAEP,IAAI,CAACO,KADD;AAEXC,MAAAA,MAAM,EAAER,IAAI,CAACQ,MAFF;AAGXC,MAAAA,KAAK,EAAET,IAAI,CAACS;AAHD,KADgC;AAM/CC,IAAAA,IAAI,EAAE;AANyC,GAAD,CAAlD;AASA,QAAMC,MAAM,GAAG;AACXJ,IAAAA,KAAK,EAAEZ,GAAG,CAACiB,MAAJ,GAAaC,QAAb,GAAwBC,GAAxB,CAA4B,CAA5B,EAA+BC,GAA/B,CAAmC,EAAnC,EAAuCC,QAAvC,GAAkDC,KAAlD,CAAwD,YAAxD,CADI;AAEXT,IAAAA,MAAM,EAAEb,GAAG,CAACiB,MAAJ,GAAaC,QAAb,GAAwBC,GAAxB,CAA4B,CAA5B,EAA+BC,GAA/B,CAAmC,EAAnC,EAAuCG,QAAvC,GAAkDD,KAAlD,CAAwD,QAAxD,CAFG;AAGXR,IAAAA,KAAK,EAAEd,GAAG,CAACwB,IAAJ,GAAWH,QAAX,GAAsBE,QAAtB,GAAiCD,KAAjC,CAAuC,YAAvC;AAHI,GAAf;;AAMA,QAAMG,QAAQ,GAAIpB,IAAD,IAAU;AACvBF,IAAAA,OAAO,CAACuB,IAAR,CAAa,QAAb;AACH,GAFD;;AAII,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEA;AAAM,MAAA,QAAQ,EAAEjB,YAAY,CAACgB,QAAD,CAA5B;AAAA,8BACI,sBAAWjB,QAAQ,CAAC,OAAD,EAAU;AAAEa,UAAAA,QAAQ,EAAE;AAAZ,SAAV,CAAnB;AAAkD,QAAA,IAAI,EAAC,OAAvD;AAA+D,QAAA,IAAI,EAAC,MAApE;AAA2E,QAAA,WAAW,EAAC;AAAvF;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,sBAAWb,QAAQ,CAAC,QAAD,EAAW;AAAEa,UAAAA,QAAQ,EAAE;AAAZ,SAAX,CAAnB;AAAmD,QAAA,IAAI,EAAC,QAAxD;AAAiE,QAAA,IAAI,EAAC,MAAtE;AAA6E,QAAA,WAAW,EAAC;AAAzF;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI,sBAAWb,QAAQ,CAAC,OAAD,EAAU;AAAEa,UAAAA,QAAQ,EAAE;AAAZ,SAAV,CAAnB;AAAkD,QAAA,IAAI,EAAC,OAAvD;AAA+D,QAAA,IAAI,EAAC,OAApE;AAA4E,QAAA,WAAW,EAAC;AAAxF;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH,CArCM;;GAAMnB,K;UAEGJ,U,EAEYC,O,EAGeF,O;;;KAP9BK,K","sourcesContent":["import React,  { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useHistory } from 'react-router-dom';\nimport { useData } from \"./DataContext\";\n\nimport Joi from \"joi-browser\";\nimport { toast } from 'react-toastify';\n\nexport const Step2 = () => {\n\nconst history = useHistory();\n\nconst { setValues, data } = useData();\nconst [ rawData, setRawData ] = useState(\"\");\n\nconst { register, handleSubmit, errors } = useForm({\n    defaultValues: { \n        phone: data.phone,\n        gender: data.gender,\n        birth: data.birth\n     },\n    mode: \"onBlur\",\n});\n\nconst schema = {\n    phone: Joi.string().alphanum().min(1).max(50).required().label(\"First Name\"),\n    gender: Joi.string().alphanum().min(2).max(50).optional().label(\"Gender\"),\n    birth: Joi.date().required().optional().label(\"Birth date\"),\n}\n\nconst onSubmit = (data) => {\n    history.push(\"/step3\")\n}\n\n    return (\n        <div>\n            <h2>Step 2: More comments</h2>\n        <form onSubmit={handleSubmit(onSubmit)}>\n            <input {...register('phone', { required: true })} name=\"phone\" type=\"text\" placeholder=\"Phone\" />\n            <input {...register('gender', { required: true })} name=\"gender\" type=\"text\" placeholder=\"Gender\" />\n            <input {...register('birth', { required: true })} name=\"birth\" type=\"email\" placeholder=\"birth\" />\n            <button type=\"submit\">Next</button>\n        </form>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}